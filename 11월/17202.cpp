//어린시절 다들 한 번씩은 이름으로 궁합을 본 적이 있을 것이다. 
//이것과 비슷한 방식으로 중앙대학교에는 핸드폰 번호 궁합을 보는 것이 유행이라고 한다.

//핸드폰 번호 궁합을 보기 위해서는 먼저 궁합을 보고싶은 
//두 중앙대생 A와 B의 핸드폰 번호에서 맨 앞의 010과 "-"(하이픈)을 모두 제외한 후, 
//A부터 시작하여 한 숫자씩 번갈아가면서 적는다. 
//그리고 인접한 두 숫자끼리 더한 값의 일의 자리를 두 숫자의 아래에 적어나가면서 
//마지막에 남는 숫자 2개로 궁합률을 구하게 된다.

//예를 들어, 아래의 그림과 같이 A의 번호가 010-7475-9336 이고, 
//B의 번호가 010-3619-5974 이면, 7346715995393764에서 시작하여 
//070386484822030, 77314022204233, 4045424424656, 449966866011, 83852442612, 
//1137686873, 240344450, 64378895, 0705674, 775131, 42644, 
//6808, 488, 26이 되어 둘은 26%의 궁합률을 가지게 된다.

//74759336
//36195974
//->26
#include <iostream>
#include <vector>
using namespace std;

int main()
{
    int A[8], B[8];
    //cin >> A[8] >> B[8];

    for(int i=0;i<8;i++){ 
        scanf("%1d",&A[i]); //한글자씩 받아서 A배열에 넣기
    }

    for(int i=0;i<8;i++){ 
        scanf("%1d",&B[i]); //한글자씩 받아서 B배열에 넣기
    }
    //int A[8] = { 7,4,7,5,9,3,3,6 };
    //int B[8] = { 3,6,1,9,5,9,7,4};

    vector<int> result;
    vector<int> result2;

    for (int i = 0; i < 8; i++) {
       result.push_back((A[i]+B[i])%10);
       if(i<7)
        result.push_back((B[i]+A[i+1])%10);
    }

    while(result.size()!=2){
        for(int i=0;i<result.size()-1;i++){
            result2.push_back((result[i]+result[i+1])%10);
        }
        result=result2;
        result2.clear();
    }

    for(int i=0; i <result.size(); i++){
        cout<<result[i];
    }
}
